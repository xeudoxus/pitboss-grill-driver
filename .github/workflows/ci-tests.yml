name: CI - Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
      fail-fast: false
    concurrency:
      group: ci-tests-${{ github.ref }}
      cancel-in-progress: false
    timeout-minutes: 30

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Create Python virtual environment
      shell: pwsh
      run: |
        python -m venv .venv

        # Add the venv "bin"/Scripts directory to the job PATH persistently
        if ($env:RUNNER_OS -eq 'Windows') {
          $venvBin = Join-Path $PWD '.venv\Scripts'
        } else {
          $venvBin = Join-Path $PWD '.venv/bin'
        }
        Write-Host "Adding virtualenv bin to PATH: $venvBin"
        Add-Content -Path $env:GITHUB_PATH -Value $venvBin

        # Use the venv's python executable to upgrade pip and install deps
        $py = Join-Path $venvBin 'python.exe'
        if (-not (Test-Path $py)) { $py = Join-Path $venvBin 'python' }
        & $py -m pip install --upgrade pip
        & $py -m pip install -r requirements.txt

    - name: Run tests
      shell: pwsh
      run: |
        Write-Host "PowerShell Version: $($PSVersionTable.PSVersion)"

        # Activate the venv inside this step so test.ps1 runs with the correct interpreter
        if ($env:RUNNER_OS -eq 'Windows') {
          . .\.venv\Scripts\Activate.ps1
        } else {
          # PowerShell on Linux has an Activate.ps1 in the venv bin directory
          if (Test-Path './.venv/bin/Activate.ps1') { . ./.venv/bin/Activate.ps1 }
        }

        pwsh -NoProfile -ExecutionPolicy Bypass -File "./test.ps1" | Tee-Object -FilePath test-output.txt
        if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }

    - name: Upload test output
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-output-${{ matrix.os }}
        path: test-output.txt
